########## [DATA] ########
# [DATA] 데이터 불러오기
product<-read.csv('C:\\Users\\user\\Desktop\\lpoint1.csv', header = T)
search1<-read.csv('C:\\Users\\user\\Desktop\\lpoint2.csv', header = T)
custom<-read.csv('C:\\Users\\user\\Desktop\\lpoint4.csv', header = T)
session<-read.csv('C:\\Users\\user\\Desktop\\lpoint5.csv', header = T)
master<-read.csv('C:\\Users\\user\\Desktop\\lpoint6.csv', header = T)

#--------------------------------------------------------------#
# [OUTLIER 제거]
product<-product[product$HITS_SEQ>1,]
# [전처리] NA 제거
session<-session[complete.cases(session),]

# [DATA_master] master 테이블에 세일변수 추가
mySALE_PD <- read.csv("C:\\Users\\user\\Desktop\\mySALE_PD.csv", header=F)
master["mySALE_PD"] <- mySALE_PD[,2]

#--------------------------------------------------------------#
# [DATA_master] master CLAC1_NM 10개로 나누기
c1<-c('남성의류','여성의류','속옷/양말/홈웨어','스포츠패션',
      '패션잡화')
c2<-c('건강식품','과일','냉동식품','음료','축산물','포장반찬')
c3<-c('식기/조리기구', '세제/위생', '인테리어/조명', '자동차용품',
      '주방잡화', '청소/세탁/욕실용품', '침구/수예', '퍼스널케어')
c4<-c('가구')
c5<-c('계절가전', '냉장/세탁가전', '생활/주방가전', '영상/음향가전',
      '컴퓨터', '모바일')
c6<-c('화장품/뷰티케어')
c7<-c('유아동의류', '출산/육아용품', '완구', '유아동가구')
c8<-c('구기/필드스포츠', '시즌스포츠', '아웃도어/레저', '헬스/피트니스')
c9<-c('문구/사무용품', '상품권')
c10<-c('애완용품')

#--------------------------------------------------------------#
########## [LIBRARY] ########

library(tidyverse)
library(ggplot2)
library(gridExtra)
library(scales)
library(lubridate)
library(networkD3)
library(plyr)
library(dplyr)
library(psych)
library(GPArotation)
library(corrplot)
library(psych)
options("scipen" = 100)

# [FUNCTION_%!in%]
'%!in%' <- function(x,y)!('%in%'(x,y))

#--------------------------------------------------------------#
########## [DATA_master] 상품군 분류하기 ########

master$CLAC1_NM<-as.character(master$CLAC1_NM)

levels(master$CLAC1_NM)<-c(levels(master$CLAC1_NM), "유아동가구")
levels(master$CLAC1_NM)<-c(levels(master$CLAC1_NM), "포장반찬")

newname1<-c("유아동속옷","유아동스포츠화","유아동양말류",
            "유아동일반스포츠의류","유아동화","유아동가구")

for (i in 1:nrow(master)){
  if(master[i,"CLAC2_NM"] %in% newname1) {
    master[i,"CLAC1_NM"]<-"유아동의류"
  } 
}

master$CLAC1_NM = as.factor(master$CLAC1_NM)

#--------------------------------------------------------------#
# [DATA_master] 10개의 상품군으로 분류
master<-master %>% 
  mutate('myCLAC_NM'=ifelse(CLAC1_NM %in% c1,1,
                            ifelse(CLAC1_NM %in% c2,2,
                                   ifelse(CLAC1_NM %in% c3,3,
                                          ifelse(CLAC1_NM %in% c4,4,
                                                 ifelse(CLAC1_NM %in% c5,5,
                     ifelse(CLAC1_NM %in% c6,6,
                            ifelse(CLAC1_NM %in% c7,7,
                                   ifelse(CLAC1_NM %in% c8,8,
                                          ifelse(CLAC1_NM %in% c9,9,10))))))))))
master$myCLAC_NM<-as.factor(master$myCLAC_NM)

#--------------------------------------------------------------#
########## [DATA_final & final_clean & mydata1] ################
#--------------------------------------------------------------#
#                            DATA NAME                         #
# final : 전체 데이터셋 (product, custom, session, master)     #
# mydata1 : final에서 상품을 구매하지 않고 방문만 한 경우 제외 #
# final_clean : final에서 complete cases만!                    #
#                 (고객정보O/구매한 경우만 포함)               #
#--------------------------------------------------------------#
# [DATA_merging] product & master & session & custom
final<-left_join(product,custom)
final<-right_join(final,session)
final<-left_join(final,master)
# 구입을 하지 않고 접속만 한 경우도 포함!
# 고객정보 제공하지 않은 고객도 포함!

#[DATA_final] 변수 추가(myMONTH, myWEEK)
final<-final %>% mutate(SESS_DT = as.Date(SESS_DT),
                        myMONTH =  month(SESS_DT),
                        myWEEK = cut(SESS_DT, breaks = "week", start.on.monday = F),
                        myWEEKDAY =wday(SESS_DT))
final<-final %>% mutate(myEACH_SESS_HR_V = TOT_SESS_HR_V / TOT_PAG_VIEW_CT,
                        myPD_BUY_TOT = PD_BUY_AM * PD_BUY_CT, 
                        myCLNT_AGE=ifelse(CLNT_AGE %in% c(60,70,80),'60+',CLNT_AGE))


# [DATA_final_clean] 고객정보 제공하고 구입을 한 자료만 포함 COMPLETE CASES!
final_clean<-final[complete.cases(final),]

# [DATA_mydata1] 방문만 한 경우 제외
mydata1<-final%>%filter(!is.na(myCLAC_NM))

myLABEL<-c('의류/패션','식품/농수산물','생활/자동차용품',
           '가구','가전/컴퓨터/통신기기','화장품','아동/유아용품',
           '스포츠/레저용품','사무/문구','애완용품')

########## [DATA_mySALE_PD] ###########

# [DATA_pd_class2 & pd_class3]
pd_class2 <- final %>% 
  select(PD_C, myCLAC_NM, CLAC2_NM, mySALE_PD) %>% 
  group_by(myCLAC_NM,CLAC2_NM) %>% 
  summarise(count=sum(mySALE_PD))
pd_class3 <- final %>% 
  select(PD_C, myCLAC_NM, CLAC2_NM, mySALE_PD) %>% 
  group_by(myCLAC_NM,CLAC2_NM) %>% 
  count()

# [DATA_mysale] 상품군별 세일인 제품의 갯수와 세일제품구매비율
mysale <- left_join(pd_class2,pd_class3)
mysale<-mysale %>% group_by(myCLAC_NM,CLAC2_NM) %>% 
  transmute('sale'=count/n)

#--------------------------------------------------------------#
########## [DOUGHNUT CHART] ##################
## [GOAL] 회원유무, 성별과 연령의 구성 살펴보기
# [DATA_join] 회원의 유무
total<-as.numeric(final %>% distinct(CLNT_ID) %>% count())
yes<-as.numeric(custom %>% distinct(CLNT_ID) %>% count())
join<-data.frame('JOIN'=c('YES','NO'),
                 'n'=c(yes,total-yes))
join$fraction<-join$n/sum(join$n)
join$ymax<-cumsum(join$fraction)
join$ymin<-c(0,head(join$ymax,-1))
join$midpoint<-join$ymax-join$fraction/2
join$label<-paste0(join$JOIN, '\n', '(', 
                   round(join$n / sum(join$n) * 100, 1), "%", ')')
join

# [PLOT_p1]
p1<-ggplot(join)+theme_void()+
  geom_rect(aes(fill=JOIN,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('GENDER',values = c("#F2F2F2", "#CCEBC5"))+
  geom_text(aes(x = 3, y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "회원가입의 유무",size=8)
p1

# [DATA_gender] 성별의 구성 (비회원인 경우 성별을 알 수 없으므로 제외)
gender<-data.frame(final %>% filter(!is.na(CLNT_GENDER)) %>% group_by(CLNT_GENDER) %>%
                     distinct(CLNT_ID) %>% count())
levels(gender$CLNT_GENDER)<-c('여성','남성')
gender$CLNT_GENDER<-c('여성','남성')
gender$fraction<-gender$n/sum(gender$n)
gender$ymax<-cumsum(gender$fraction)
gender$ymin<-c(0,head(gender$ymax,-1))
gender$midpoint<-gender$ymax-gender$fraction/2
gender$label<-paste0(gender$CLNT_GENDER, '\n', '(', 
                     round(gender$n / sum(gender$n) * 100, 1), "%", ')')
gender

# [PLOT_p2]
p2<-ggplot(gender)+theme_void()+
  geom_rect(aes(fill=CLNT_GENDER,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('GENDER',values = c("#B3CDE3", "#FBB4AE"))+
  geom_text(aes(x = 3, y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "성별의 구성비",size=8)
p2

# [DATA_age] 연령의 구성
age<-data.frame(final %>% filter(!is.na(CLNT_GENDER)) %>% group_by(CLNT_AGE) %>% 
                  distinct(CLNT_ID) %>% count())
age[6,2]<-sum(age[6:8,2])
age<-age[1:6,]
levels(age$CLNT_AGE)<-c('10','20','30','40','50','60+')
age$CLNT_AGE<-c('10','20','30','40','50','60+')
age$CLNT_AGE<-as.factor(age$CLNT_AGE)
age$fraction<-age$n/sum(age$n)
age$ymax<-cumsum(age$fraction)
age$ymin<-c(0,head(age$ymax,-1))
age$midpoint<-age$ymax-age$fraction/2
age$label<-paste0(age$CLNT_AGE, '대', '\n', '(',
                  round(age$n / sum(age$n) * 100, 1), "%",')')
age

# [PLOT_p3]
p3<-ggplot(age)+theme_void()+
  geom_rect(aes(fill=CLNT_AGE,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('AGE',values = c("#FBB4AE", "#B3CDE3", "#CCEBC5",
                                     "#DECBE4", "#FED9A6", "#FFFFCC"))+
  geom_text(aes(x = c(4,3,3,3,3,2), y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "연령의 구성비",size=8)
p3

# [DATA_price] 상품군별 총구매액

price<-data.frame(final %>% filter(!is.na(CLNT_GENDER)) %>% 
                    select(myCLAC_NM,CLAC2_NM,PD_BUY_AM,PD_BUY_CT) %>% 
                    mutate(myTOT=as.numeric(PD_BUY_AM*PD_BUY_CT)))
price<-price %>% group_by(myCLAC_NM) %>% summarise(n=sum(myTOT))

price$fraction<-price$n/sum(price$n)
price$ymax<-cumsum(price$fraction)
price$ymin<-c(0,head(price$ymax,-1))
price$midpoint<-price$ymax-price$fraction/2
price$label<-paste0(myLABEL, '\n', '(', 
                    round(price$n / sum(price$n) * 100, 1), "%", ')')
price

# [PLOT_p4]
p4<-ggplot(price)+theme_void()+
  geom_rect(aes(fill=myCLAC_NM,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('CLASS',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"))+
  geom_text(aes(x = c(3,3,4,rep(3,5),2,4), y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "상품군별 \n총구매액의 구성비",size=8)
p4

#--------------------------------------------------------------#
# [PLOT] 성별별 구매건수 (건수)
ggplot(final_clean,aes(x=myCLAC_NM))+geom_bar()+theme_bw() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1))+
  scale_x_discrete(label=myLABEL)+
  facet_grid(~CLNT_GENDER)

# [PLOT] 성별별 구매건수 (비율)
ggplot(final_clean,aes(myCLAC_NM))+geom_bar(aes(y=..prop..,group=1))+
  facet_grid(~CLNT_GENDER,
             labeller = labeller(CLNT_GENDER = c('F' = "Female", 'M' = "Male")))+
  theme_bw()+
  theme(axis.text.x = element_text(angle = 30, hjust = 1))+
  scale_x_discrete(label=myLABEL)

# [PLOT] 연령대별 구매건수
ggplot(final_clean,aes(x=myCLAC_NM))+geom_bar()+theme_bw() +
  theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  scale_x_discrete(label=myLABEL)+facet_grid(~myCLNT_AGE)

# [PLOT] 성별과 연령대별 구매건수 (건수)
ggplot(final_clean,aes(x=myCLAC_NM))+geom_bar()+
  facet_grid(CLNT_GENDER~myCLNT_AGE) + 
  theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  scale_x_discrete(label=myLABEL)

# [PLOT] 성별과 연령대별 구매건수 (비율)
ggplot(final_clean,aes(myCLAC_NM))+
  geom_bar(aes(y=..prop..,group=1))+
  facet_grid(CLNT_GENDER~myCLNT_AGE)+theme_bw() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  scale_x_discrete(label=myLABEL)

# [PLOT] 제품군별 구매건수 (비율)
ggplot(final_clean,aes(x=myCLNT_AGE))+
  geom_bar(aes(y=..prop..,group=1))+theme_bw() +
  facet_wrap(~myCLAC_NM,nrow=2,
             labeller = labeller(myCLAC_NM = c('1'=myLABEL[1],'2'=myLABEL[2],
                                               '3'=myLABEL[3],'4'=myLABEL[4],
                                               '5'=myLABEL[5],'6'=myLABEL[6],
                                               '7'=myLABEL[7],'8'=myLABEL[8],
                                               '9'=myLABEL[9],'10'=myLABEL[10])))

# [PLOT] 제품군별 구매건수 (건수)
ggplot(final_clean,aes(x=myCLNT_AGE,fill=CLNT_GENDER))+
  geom_bar()+theme_bw() +
  facet_wrap(~myCLAC_NM,nrow=2, scales = 'free_y',
             labeller = labeller(myCLAC_NM = c('1'=myLABEL[1],'2'=myLABEL[2],
                                               '3'=myLABEL[3],'4'=myLABEL[4],
                                               '5'=myLABEL[5],'6'=myLABEL[6],
                                               '7'=myLABEL[7],'8'=myLABEL[8],
                                               '9'=myLABEL[9],'10'=myLABEL[10])))

# [PLOT] 전체 연령별 관심 상품군
ggplot(final_clean,aes(x=fct_rev(myCLNT_AGE),fill=myCLAC_NM),color='black')+
  geom_bar(position = position_fill(reverse = TRUE))+theme_bw()+coord_flip()+
  scale_fill_manual('상품군 분류',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"),
                    labels=myLABEL)+
  labs(x='AGE',y='',title='전체 연령별 관심 상품군')

# [PLOT] 여성 고객의 전체 연령별 관심 상품군
ggplot(final_clean %>% filter(CLNT_GENDER=='F'),
       aes(x=fct_rev(myCLNT_AGE),fill=myCLAC_NM))+
  geom_bar(position = position_fill(reverse = TRUE))+theme_bw()+coord_flip()+
  scale_fill_manual('상품군 분류',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"),
                    labels=myLABEL)+
  labs(x='AGE',y='',title='여성 고객의 전체 연령별 관심 상품군')

# [PLOT] 남성 고객의 전체 연령별 관심 상품군
ggplot(final_clean %>% filter(CLNT_GENDER=='M'),
       aes(x=fct_rev(myCLNT_AGE),fill=myCLAC_NM))+
  geom_bar(position = position_fill(reverse = TRUE))+theme_bw()+coord_flip()+
  scale_fill_manual('상품군 분류',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"),
                    labels=myLABEL)+
  labs(x='AGE',y='',title='남성 고객의 전체 연령별 관심 상품군')

#--------------------------------------------------------------#
########## [SANKEYNETWORK] ###################
new_mydata1<-final_clean %>% group_by(CLNT_GENDER,myCLNT_AGE,myCLAC_NM) %>% count()
new_mydata1<-new_mydata1 %>% mutate('source'=as.numeric(myCLAC_NM)-1)
myLINK<-cbind(as.data.frame(new_mydata1),
              data.frame('target'=rep(10:21,each=10)))
myLINK<-myLINK[,c(5,6,4)]
colnames(myLINK)<-c('source','target','value')

myNODE<-data.frame('name'=c(myLABEL,
                            '10대 여성','20대 여성','30대 여성',
                            '40대 여성','50대 여성','60대 여성',
                            '10대 남성','20대 남성','30대 남성',
                            '40대 남성','50대 남성','60대 남성'))

sankeyNetwork(Links = myLINK[1:60,], Nodes = data.frame('name'=myNODE[1:16,]),
              Source = "source", Target = "target",
              Value = "value", NodeID = "name",
              fontSize = 10, nodeWidth = 10)
myNODE$name[11:16]<-NA
sankeyNetwork(Links = myLINK[61:120,], Nodes = myNODE,
              Source = "source", Target = "target",
              Value = "value", NodeID = "name",
              fontSize = 10, nodeWidth = 10)

#--------------------------------------------------------------#
########## [GOAL] 기기유형 비율 #######################
# 전체 고객의 기기유형별 구매 상품군의 가격 구성비
ggplot(final %>% group_by(DVC_CTG_NM,myCLAC_NM) %>% 
         filter(!is.na(myCLAC_NM)) %>% 
         summarise(n=sum(myPD_BUY_TOT,na.rm = T)),
       aes(x=DVC_CTG_NM,n,fill=myCLAC_NM))+theme_bw()+
  geom_bar(stat='identity',position = position_fill(reverse = TRUE))+
  coord_flip()+
  scale_fill_manual('상품군 분류',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"),
                    labels=myLABEL)+
  labs(x='기기유형',y='',title='전체 고객의 기기유형별 구매상품군의 구매금액 구성')

# [DATA_infoyes] 회원가입한 고객만
infoyes<-final_clean%>%group_by(DVC_CTG_NM)%>%count()
infoyes<-infoyes%>%mutate('rate'=n/colSums(infoyes[,2]))
infoyes

# [DATA_infoyes2] 방문만 한 경우 제외
infoyes2<-final_clean %>% 
  group_by(DVC_CTG_NM,CLNT_GENDER,myCLAC_NM) %>% count()

# [PLOT]
ggplot(infoyes,aes(DVC_CTG_NM,rate))+theme_bw()+
  geom_bar(stat='identity')+
  labs(x='기기유형',title='회원가입한 고객의 기기유형별 구매건수')
# [PLOT] 기기유형별 구입한 제품군의 비율
ggplot(infoyes2,aes(x=DVC_CTG_NM,n,fill=myCLAC_NM))+theme_bw()+
  geom_bar(stat='identity',position = position_fill(reverse = TRUE))+
  coord_flip()+
  scale_fill_manual('상품군 분류',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"),
                    labels=myLABEL)+
  labs(x='기기유형',y='',title='회원가입한 고객의 기기유형별 구매상품군')

ggplot(infoyes2 %>% filter(CLNT_GENDER=='F'),aes(x=DVC_CTG_NM,n,fill=myCLAC_NM))+
  theme_bw()+
  geom_bar(stat='identity',position = position_fill(reverse = TRUE))+
  coord_flip()+
  scale_fill_manual('상품군 분류',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"),
                    labels=myLABEL)+
  labs(x='기기유형',y='',title='회원가입한 여성고객의 기기유형별 구매상품군')

ggplot(infoyes2 %>% filter(CLNT_GENDER=='M'),aes(x=DVC_CTG_NM,n,fill=myCLAC_NM))+
  theme_bw()+
  geom_bar(stat='identity',position = position_fill(reverse = TRUE))+
  coord_flip()+
  scale_fill_manual('상품군 분류',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"),
                    labels=myLABEL)+
  labs(x='기기유형',y='',title='회원가입한 남성고객의 기기유형별 구매상품군')


# [DATA_infono] 비회원인 고객만
infono<-mydata1 %>% filter(is.na(CLNT_GENDER))%>%
  group_by(DVC_CTG_NM)%>%count() 
infono<-infono %>% mutate('rate'=n/colSums(infono[,2]))
infono

# [DATA_infono2] 방문만 한 경우 제외
infono2<-mydata1 %>% filter(is.na(CLNT_GENDER))%>%
  group_by(DVC_CTG_NM,myCLAC_NM) %>% count()

# [PLOT]
ggplot(infono,aes(DVC_CTG_NM,rate))+theme_bw()+
  geom_bar(stat='identity')+
  labs(x='기기유형',title='회원가입 안한 고객(비회원)의 기기유형별 구매건수')
# [PLOT] 기기유형별 구입한 제품군의 비율
ggplot(infono2,aes(x=DVC_CTG_NM,n,fill=myCLAC_NM))+theme_bw()+
  geom_bar(stat='identity',position = position_fill(reverse = TRUE))+
  coord_flip()+
  scale_fill_manual('상품군 분류',
                    values = c("#D53E4F", "#F46D43", "#FDAE61", "#FEE08B", "#E6F598",
                               "#ABDDA4", "#66C2A5", "#3288BD", "#5E4FA2", "#5E4FA2"),
                    labels=myLABEL)+
  labs(x='기기유형',y='',title='회원가입 안한 고객의 기기유형별 구매상품군')

#--------------------------------------------------------------#
########## [GOAL] 방문횟수와 고객정보 제공 여부의 관계#########

visit1<-session%>%group_by(CLNT_ID)%>%count()%>%filter(n==1)    # 1번 방문
visit2<-session%>%group_by(CLNT_ID)%>%count()%>%filter(n==2)    # 2번 방문
visit3<-session%>%group_by(CLNT_ID)%>%count()%>%filter(n>2)    # 3번 이상 방문

visit1_id<-visit1$CLNT_ID %>% unique()    # 1번 방문한 고객의 ID
visit2_id<-visit2$CLNT_ID %>% unique()    # 2번 방문한 고객의 ID
visit3_id<-visit3$CLNT_ID %>% unique()    # 3번 이상 방문한 고객의 ID

# [DATA] 1번 방문한 고객의 고객정보 제공 여부
visit1_custom_yes<-custom[custom$CLNT_ID %in% visit1_id,]
# [VECTOR] 1번 방문한 고객 & 고객정보O (ID)
visit1_custom_yes_id<-visit1_custom_yes$CLNT_ID
visit1_yes<-length(visit1_custom_yes_id)
# [VECTOR] 1번 방문한 고객 & 고객정보X (ID)
visit1_custom_no_id<-visit1_id[visit1_id %!in% visit1_custom_yes_id]
visit1_no<-length(visit1_custom_no_id)

# [DATA] 2번 방문한 고객의 고객정보 제공 여부
visit2_custom_yes<-custom[custom$CLNT_ID %in% visit2_id,]
# [VECTOR] 2번 방문한 고객 & 고객정보O (ID)
visit2_custom_yes_id<-visit2_custom_yes$CLNT_ID
visit2_yes<-length(visit2_custom_yes_id)
# [VECTOR] 2번 방문한 고객 & 고객정보X (ID)
visit2_custom_no_id<-visit2_id[visit2_id %!in% visit2_custom_yes_id]
visit2_no<-length(visit2_custom_no_id)

# [DATA] 3번 이상 방문한 고객의 고객정보 제공 여부
visit3_custom_yes<-custom[custom$CLNT_ID %in% visit3_id,]
# [VECTOR] 3번 이상 방문한 고객 & 고객정보O (ID)
visit3_custom_yes_id<-visit3_custom_yes$CLNT_ID
visit3_yes<-length(visit3_custom_yes_id)
# [VECTOR] 3번 이상 방문한 고객 & 고객정보X (ID)
visit3_custom_no_id<-visit3_id[visit3_id %!in% visit3_custom_yes_id]
visit3_no<-length(visit3_custom_no_id)

# [DATA_visit]
visit<-data.frame('visit_times'=c('once','twice','more than twice'),
                  'custom_yes'=c(visit1_yes, visit2_yes, visit3_yes),
                  'custom_no'=c(visit1_no, visit2_no, visit3_no))

par(mfrow=c(1,3))
# [PIE CHART] 1번 방문
slices1<-as.numeric(visit[1,-1])
lbls1<-c('YES','NO')
pct1<-round(slices1/sum(slices1)*100)
lbls1<-paste(lbls1,'\n',pct1)
lbls1<-paste0(lbls1,'%')
pie(slices1, labels = lbls1, col = c('indianred1','lightgray'),
    main=paste0('회원가입 여부','\n','(한번 방문한 경우)'),radius=1.2,cex=1.5)
# [PIE CHART] 2번 방문
slices2<-as.numeric(visit[2,-1])
lbls2<-c('YES','NO')
pct2<-round(slices2/sum(slices2)*100)
lbls2<-paste(lbls2,'\n',pct2)
lbls2<-paste0(lbls2,'%')
pie(slices2, labels = lbls2, col = c('indianred1','lightgray'),
    main=paste0('회원가입 여부','\n','(2번 방문한 경우)'),radius=1.2,cex=1.5)
# [PIE CHART] 3번 이상 방문
slices3<-as.numeric(visit[3,-1])
lbls3<-c('YES','NO')
pct3<-round(slices3/sum(slices3)*100)
lbls3<-paste(lbls3,'\n',pct3)
lbls3<-paste0(lbls3,'%')
pie(slices3, labels = lbls3, col = c('indianred1','lightgray'),
    main=paste0('회원가입 여부','\n','(3번 이상 방문한 경우)'),radius=1.2,cex=1.5)

par(mfrow=c(1,1))

#--------------------------------------------------------------#
########## [DATA] 성별/연령별 구매금액#####################

# [DATA_product_price]

product_price <- final[,c("CLNT_ID", "SESS_ID", "PD_C", "myCLNT_AGE", "CLNT_GENDER",
                          "CLNT_AGE", "myCLAC_NM", "myPD_BUY_TOT")]

# [DATA_product_price_mean] 성별/연령별 평균구매금액
product_price_mean<-product_price %>% group_by(CLNT_GENDER,CLNT_AGE) %>% 
  summarise(myTOT_MEAN=mean(myPD_BUY_TOT, na.rm=T))
# [DATA_product_price_n] 성별/연령별 구매건수
product_price_n<-product_price %>% group_by(CLNT_GENDER,CLNT_AGE) %>% count()

# [DATA_product_price2] 연령별 구매건수와 평균구매금액
product_price2<-left_join(product_price_mean,product_price_n)
product_price2<-product_price2 %>% mutate('new'=paste0(CLNT_GENDER,CLNT_AGE))
product_price2[17,5]<-'NO INFO'

ggplot(product_price2[-17,],aes(reorder(new,-myTOT_MEAN*n),myTOT_MEAN*n))+
  geom_bar(stat='identity')+theme_bw()+
  labs(x='GENDER & AGE',y='구매 고객의 총 구매액',
       title='연령과 성별에 따른 총 구매액')

ggplot(product_price2[-17,],aes(reorder(new,-myTOT_MEAN),myTOT_MEAN))+
  geom_bar(stat='identity',aes(fill=CLNT_GENDER))+theme_bw()+
  labs(x='GENDER & AGE',y='',
       title='연령과 성별에 따른 평균구매액')+
  theme(plot.title = element_text(size=20),
        axis.text = element_text(size=16),
        legend.position = 'none')+
  scale_fill_manual('',values = c('gold1','royalblue'),na.value='grey50')

ggplot(product_price2,aes(reorder(new,-n),n))+
  geom_bar(stat='identity',aes(fill=CLNT_GENDER))+theme_bw()+
  labs(x='GENDER & AGE', y='',
       title = '연령과 성별에 따른 구매건수')+
  theme(plot.title = element_text(size=20),
        axis.text = element_text(size=14),
        legend.position = 'none')+
  scale_fill_manual('',values = c('gold1','royalblue'),na.value='grey50')

#--------------------------------------------------------------------#
########## [DATA] 상품군을 대분류를 기준으로 재구매별 구하기(전체; myCLAC_NM) ############
# [DATA_mydata2 & mydata3]
mydata2<-mydata1[,c("CLNT_ID", "SESS_ID", "PD_C", "CLNT_GENDER", "myCLNT_AGE",
                    "myCLAC_NM", "CLAC2_NM", "myWEEKDAY", "myPD_BUY_TOT", 
                    "myWEEK","myWEEKDAY")]

mydata3<-mydata2 %>% group_by(myCLAC_NM,CLAC2_NM,CLNT_GENDER,myCLNT_AGE)%>% 
  summarise('myMEAN'=mean(myPD_BUY_TOT),
            'myTOTAL'=sum(myPD_BUY_TOT,na.rm = T)) %>% 
  mutate('new'=paste0(CLNT_GENDER,myCLNT_AGE))

# [DATA_repurchase_data]
repurchase_data<-mydata2 %>% distinct(CLNT_ID,SESS_ID,PD_C,myCLAC_NM,CLAC2_NM)
repurchase_data<-repurchase_data %>% 
  group_by(myCLAC_NM,CLAC2_NM,CLNT_ID,PD_C) %>% 
  count() %>% filter(n>1) %>% mutate('repurchase'=n-1)

########## [DATA] 상품군을 중분류를 기준으로 재구매율 구하기(전체; CLAC2_NM) ############
# [DATA_repurchase_data2]
repurchase_data2<-mydata2 %>% filter(myWEEK!='2018-09-30') %>% 
  distinct(myWEEK,CLNT_ID,SESS_ID,PD_C,myCLAC_NM,CLAC2_NM)

# [DATA_repurcahse_data2_count] 주별 중분류별 구매건수
repurchase_data2_count<-repurchase_data2 %>% 
  group_by(myWEEK,CLAC2_NM) %>% count()

repurchase_data2<-repurchase_data2 %>% 
  group_by(myWEEK,myCLAC_NM,CLAC2_NM,CLNT_ID,PD_C) %>% 
  count() %>% filter(n>1)

repurchase_data2_1<-repurchase_data2 %>% group_by(CLNT_ID,PD_C) %>% 
  arrange(CLNT_ID,myWEEK) %>% mutate('obs'=1:n())

repurchase_data2_2<-repurchase_data2_1 %>% 
  mutate('repurchase'=ifelse(obs==1,n-1,n))

# [DATA_repurchase_data2_3] 주별 중분류별 재구매건수
repurchase_data2_3<-repurchase_data2_2 %>% 
  group_by(CLAC2_NM,myWEEK) %>% summarise('count'=sum(repurchase,na.rm = T))

# [DATA_rebuy_data_weekly] 주별 중분류별 재구매율
rebuy_data_weekly<-left_join(repurchase_data2_3,repurchase_data2_count)
rebuy_data_weekly<-rebuy_data_weekly %>% 
  mutate('rebuy'=count/n)
head(rebuy_data_weekly)

#--------------------------------------------------------------#
########## [GOAL] 대분류별 분석######################
## [GOAL] 전체 대분류 분석
# [PLOT] 요일에 따른 구매건수
data_week<-mydata2 %>% select(myCLAC_NM,CLAC2_NM,myWEEKDAY)
ggplot(data_week,aes(myWEEKDAY))+geom_bar()+theme_bw()+
  scale_x_continuous(breaks=1:7,
                     labels=c('일요일','월요일','화요일','수요일',
                              '목요일','금요일','토요일'))+
  labs(x='요일',y='구매건수',title='요일별 구매건수')

#--------------------------------------------------------------#
########## [DATA] rebuy_data ######################
# [DATA_rebuy_data] 상품군별 재구매율
temp11<-repurchase_data %>% group_by(myCLAC_NM,CLAC2_NM) %>% 
  summarise('repurchase'=sum(repurchase))
temp12<-final %>% group_by(myCLAC_NM,CLAC2_NM) %>% count()
temp13<-left_join(temp11,temp12)
repurchase_data_s<-temp13 %>% mutate('rebuy'=repurchase/n)

repurchase_data1<-as.data.frame(repurchase_data_s %>% group_by(myCLAC_NM) %>% 
                                  summarise(re_total=sum(repurchase),re_n=sum(n)) %>% 
                                  transmute(re=re_total/re_n))[1:10,]

rebuy_data<-data.frame('myCLASS'=c('의류/패션','식품/농수산물','생활/자동차용품',
                                   '가구','가전/컴퓨터/통신기기','화장품','아동/유아용품',
                                   '스포츠/레저용품','사무/문구','애완용품'),
                       'rebuy'=round(repurchase_data1*100,2))
rebuy_data

# [PLOT]
ggplot(rebuy_data,aes(reorder(myCLASS,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+
  labs(x='',y='재구매율(%)',title='상품군별 재구매율')

#--------------------------------------------------------------#
########## [DATA] 상품군을 중분류를 기준으로 재구매율 구하기#############
# [DATA_rebuy_data_2]
rebuy_data_2<-as.data.frame(repurchase_data_s %>% group_by(myCLAC_NM,CLAC2_NM) %>% 
                              summarise(re_total=sum(repurchase),re_n=sum(n)) %>% 
                              mutate(rebuy=re_total/re_n))


########## [PLOT] 상품군을 중분류를 기준으로 재구매율 구하기#############
## [GOAL] [의류/패션] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==1),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='의류/패션')

## [GOAL] [식품/농수산물] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==2),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='식품/농수산물')

## [GOAL] [생활/자동차용품] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==3),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='생활/자동차용품')

## [GOAL] [가구] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==4),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='가구')

## [GOAL] [가전/컴퓨터/통신기기] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==5),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='가전/컴퓨터/통신기기')

## [GOAL] [화장품] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==6),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='화장품')

## [GOAL] [아동/유아용품] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==7),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='아동/유아용품')

## [GOAL] [스포츠/레저용품] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==8),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='스포츠/레저용품')

## [GOAL] [사무/문구] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==9),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='사무/문구')

## [GOAL] [애완용품] 중분류 분석
# [PLOT] 재구매
ggplot(rebuy_data_2 %>% filter(myCLAC_NM==10),
       aes(reorder(CLAC2_NM,-rebuy),rebuy))+theme_bw()+
  geom_bar(stat='identity')+ 
  theme_bw() + theme(axis.text.x = element_text(angle = 40, hjust = 1))+
  labs(x='',y='재구매율',title='애완용품')

#--------------------------------------------------------------#
########## [GOAL] 중분류별 재구매율과 세일비율의 분포 #############
# 세일비율과 재구매율
temp1<-left_join(rebuy_data_2[,c("myCLAC_NM", "CLAC2_NM", "rebuy")],mysale)
temp1<-temp1[complete.cases(temp1),]
# 구매건수
temp2<-left_join(temp1,mydata1 %>% group_by(myCLAC_NM,CLAC2_NM) %>% count())
# 건당 평균 구매금액
temp3<-left_join(temp2,mydata2 %>% 
                   group_by(myCLAC_NM,CLAC2_NM) %>% 
                   summarise('total'=sum(myPD_BUY_TOT,na.rm = T)))
temp3<-temp3 %>% mutate('total_per_count'=total/n)
# 각 중분류별 구매고객의 수
temp4<-mydata2 %>% distinct(CLNT_ID,myCLAC_NM,CLAC2_NM) %>% 
  group_by(myCLAC_NM,CLAC2_NM) %>% count()
temp5<-left_join(temp3,temp4,by=c('myCLAC_NM','CLAC2_NM'),
                 suffix=c('.count','.client'))
temp6<-temp5 %>% mutate('total_per_client'=total/n.client)
head(temp6)

ggplot(temp6 %>% filter(myCLAC_NM==1),aes(x=CLAC2_NM))+
  geom_line(aes(y=rebuy,color='재구매율'),group=1)+
  geom_line(aes(y=sale,color='세일비율'),group=1)+
  theme_bw()+
  theme(axis.text.x = element_text(angle = 40, hjust = 1),
        legend.position = 'bottom')+
  labs(x='',y='재구매율과 세일비율',title='의류/패션')+
  scale_color_manual('',values = c('red','blue'))

#--------------------------------------------------------------#
########## [DATA] 상품군을 대분류를 기준으로 재구매율 구하기(주별) ############

mydata3_1<-mydata2 %>% filter(myWEEK!='2018-09-30') %>% 
  group_by(myCLAC_NM,CLAC2_NM,myWEEK,CLNT_GENDER,myCLNT_AGE)%>% 
  summarise('myMEAN'=mean(myPD_BUY_TOT),
            'myTOTAL'=sum(myPD_BUY_TOT,na.rm = T)) %>% 
  mutate('new'=paste0(CLNT_GENDER,myCLNT_AGE))

ggplot(mydata3_1 %>% filter(myCLAC_NM==10,CLNT_GENDER=='M'),
       aes(myWEEK,myMEAN,group=new,color=new))+
  theme_bw()+
  geom_line()+facet_grid(~CLAC2_NM)+
  theme(axis.text.x = element_text(angle = 30, hjust = 1))


# [DATA_repurchase_data_1]
repurchase_data_1<-mydata2 %>% filter(myWEEK!='2018-09-30') %>% 
  distinct(CLNT_ID,SESS_ID,PD_C,myCLAC_NM,CLAC2_NM)

# [DATA_pd_class2_1 & pd_class3_1]
pd_class2_1 <- left_join(final %>% filter(myWEEK!='2018-09-30'), master) %>% 
  select(PD_C, myCLAC_NM, CLAC2_NM, mySALE_PD, myWEEK) %>% 
  group_by(myWEEK,myCLAC_NM,CLAC2_NM) %>% 
  summarise(count=sum(mySALE_PD))

pd_class3_1 <- left_join(final %>% filter(myWEEK!='2018-09-30'), master) %>% 
  select(myWEEK,PD_C, myCLAC_NM, CLAC2_NM, mySALE_PD) %>% 
  group_by(myWEEK,myCLAC_NM,CLAC2_NM) %>% 
  count()

# [DATA_mysale_1]
mysale_1 <- left_join(pd_class2_1,pd_class3_1)
mysale_1<-mysale_1 %>% group_by(myWEEK,myCLAC_NM,CLAC2_NM) %>% 
  transmute('sale'=count/n)

#--------------------------------------------------------------------#
########## [DATA] HIT정보 ################
# CLNT_ID, SESS_ID로 그룹핑한 후 한번에 제품을 하나씩만 구매한 경우만 필터링!
# (클릭 1번당 제품 1개 구입)
# 방문만 한 경우 제외

aa<-final %>% filter(myWEEK!='2018-09-30') %>% 
  select(myWEEK,CLNT_ID,SESS_ID,HITS_SEQ,PD_C) %>% 
  group_by(myWEEK,CLNT_ID,SESS_ID,HITS_SEQ) %>% 
  filter(n()==1)

aa1<-left_join(aa,final %>% 
                 select(CLNT_ID,SESS_ID,HITS_SEQ,PD_C,CLAC2_NM)) %>%
  arrange(HITS_SEQ)

aa2<-aa1 %>% group_by(myWEEK,CLNT_ID,SESS_ID) %>% 
  mutate('myHIT'=c(HITS_SEQ[1],diff(HITS_SEQ)))

aa3<-aa2 %>% group_by(CLAC2_NM,myWEEK) %>% 
  summarise('myHIT2'=mean(myHIT,na.rm = T))
aa4<-aa3[complete.cases(aa3),]

########## [DATA_search1_1] 고객의 search 정보 ################
search1_1<-search1 %>% group_by(CLNT_ID) %>% 
  summarise('mySEARCH'=mean(SEARCH_CNT))

########## [DATA_final_type] 고객의 유형분류 ################
final_type<-final%>%
  select(CLNT_ID,SESS_ID,SESS_DT,SESS_SEQ,myCLAC_NM,PD_BUY_CT,PD_C,
         myPD_BUY_TOT,myEACH_SESS_HR_V,HITS_SEQ,myCLAC_NM,mySALE_PD)
########## [DATA_visit] 신규방문 vs 재방문 ###########
visit_first<-final_type %>% group_by(CLNT_ID) %>% 
  transmute('first'=min(SESS_SEQ)) %>% 
  filter(first==1) %>% distinct(CLNT_ID)
visit_again<-final_type %>% group_by(CLNT_ID) %>% 
  transmute('first'=min(SESS_SEQ)) %>% 
  filter(first>1) %>% distinct(CLNT_ID)

########## [DATA_final_date] ################
final_type_date<-final_type %>% distinct(CLNT_ID,SESS_ID,SESS_DT) %>% 
  arrange(SESS_DT) %>% group_by(CLNT_ID) %>% filter(n()>1)
final_type_date2<-final_type_date %>% group_by(CLNT_ID) %>% 
  mutate('myDIFF'=c(0,diff(SESS_DT))) %>% 
  summarise('myDATEDIFF'=sum(myDIFF)/(n()-1))

########## [DATA_final_hit] ################
final_hit<-final_type %>% group_by(CLNT_ID,SESS_ID) %>% 
  transmute('myHIT'=max(HITS_SEQ))
final_hit2<-final_hit %>% distinct(CLNT_ID,SESS_ID,myHIT) %>% 
  group_by(CLNT_ID) %>% summarise('myHIT'=mean(myHIT))

########## [DATA_final_brand] ################
final_brand<-read.csv('C:\\Users\\user\\Desktop\\master_pop_br.csv', 
                      header = T, fileEncoding = 'utf-8')
final_brand2<-left_join(final_type %>% select(CLNT_ID,SESS_ID,PD_C,PD_BUY_CT),
                        final_brand %>% select(PD_C,myPOP_BR))
final_brand3<-final_brand2 %>% group_by(CLNT_ID) %>% 
  summarise('myBRAND'=sum(myPOP_BR*PD_BUY_CT)/sum(PD_BUY_CT))

########## [DATA_final_type2-5] (모든 고객) ################
final_type2_1<-final_type %>% 
  group_by(CLNT_ID) %>% 
  summarise('myVIEW'=mean(myEACH_SESS_HR_V),
            'myTOT_SUM'=sum(myPD_BUY_TOT,na.rm = T),
            'myTOT_MEAN'=mean(myPD_BUY_TOT),
            'myCLASS'=length(unique(myCLAC_NM)),
            'myFREQ'=max(SESS_SEQ)-min(SESS_SEQ)+1,
            'myCOUNT'=sum(PD_BUY_CT,na.rm = T),
            'mySALE'=sum(mySALE_PD*PD_BUY_CT)/sum(PD_BUY_CT))
final_type3_1<-left_join(final_type2_1,search1_1)
final_type4_1<-left_join(final_type3_1,final_hit2)
final_type4_1<-left_join(final_type4_1,final_brand3)
final_type4_1[is.na(final_type4_1$mySEARCH),'mySEARCH']<-0
final_type4_1$mySALE<-final_type4_1$mySALE
final_type4_1<-final_type4_1[complete.cases(final_type4_1),]


########## [DATA] 고객유형 나누기 ##########
# class1 : 회원, 모바일
# class2 : 비회원, 모바일
# class3 : 회원, PC
# class4 : 비회원, PC

##id
class1<-final %>% filter(!is.na(CLNT_GENDER),DVC_CTG_NM=='mobile') %>% 
  distinct(CLNT_ID)
class2<-final %>% filter(is.na(CLNT_GENDER),DVC_CTG_NM=='mobile')%>% 
  distinct(CLNT_ID)
class3<-final %>% filter(!is.na(CLNT_GENDER),DVC_CTG_NM!='mobile')%>% 
  distinct(CLNT_ID)
class4<-final %>% filter(is.na(CLNT_GENDER),DVC_CTG_NM!='mobile')%>% 
  distinct(CLNT_ID)

########## [FUNCTION_data_summ] ########
data_summ<-function(mydata){
  mydata2<-mydata %>% group_by(group) %>% 
  summarise(
            '검색건수'=mean(mySEARCH),
            '조회수'=mean(myHIT),
            '뷰시간'=mean(myVIEW),
            '구매금액총합'=mean(myTOT_SUM),
            '구매금액평균'=mean(myTOT_MEAN),
            '세일제품구매율'=mean(mySALE),
            '구매품목종류'=mean(myCLASS),
            '구매건수'=mean(myCOUNT),
            '방문횟수'=mean(myFREQ),
            '브랜드선호도'=mean(myBRAND))
  return(mydata2)
}

########## [DATA] class1 & class3 (회원) ##########
final_member<-final_type4_1 %>% filter(CLNT_ID %in% visit_again$CLNT_ID)
final_data<-final_member %>% filter(CLNT_ID %in% c(class1$CLNT_ID,
                                                  class3$CLNT_ID))

mydata<-final_data

mydata[,2:11] <- lapply(mydata[,2:11], function(x) scale(x))
mymin<-as.tibble(lapply(mydata[,2:11], function(x) min(x)))
mymin
mymax<-as.tibble(lapply(mydata[,2:11], function(x) max(x)))
mymax

# class1&class3 : k=4
a<-kmeans(mydata %>% select(-CLNT_ID),4,iter.max = 200, nstart = 5)
a$size
mydata_c13<-mydata %>% mutate('group'=a[['cluster']])
mydata_c13_id<-mydata_c13 %>% select(CLNT_ID,group)

mydata2_c13<-data_summ(mydata_c13)
mydata2_c13 %>% print(width=Inf)

mydata_radar<-mydata2_c13[,c(4,5,6,8,10,9,7,2,3,11)]
colnames(mydata_radar)<-colnames(mydata)[2:11]

radar_1<-(mydata_radar[1,]-mymin)/(mymax-mymin)
radar_2<-(mydata_radar[2,]-mymin)/(mymax-mymin)
radar_3<-(mydata_radar[3,]-mymin)/(mymax-mymin)
radar_4<-(mydata_radar[4,]-mymin)/(mymax-mymin)
radar<-rbind(radar_1,radar_2,radar_3,radar_4)

radar

alabel<-paste0(round(a$size/sum(a$size)*100,1),'%')
label1<-c(paste0('충성고객형 (',alabel[1],')'),
          paste0('철저한 조사형 (',alabel[2],')'),
          paste0('실속형 (',alabel[3],')'),
          paste0('브랜드 매니아형 (',alabel[4],')'))

# radarchart
radarchart(radar,pcol=c(1,2,'gold',4),maxmin=F,
           vlabels = c('뷰시간','구매금액총합','구매금액평균','구매품목종류',
                       '방문횟수','구매건수','세일제품구매율','검색건수',
                       '조회수','브랜드선호도'),
           plty=1,pfcol=alpha(c(1,2,'gold',4),0.3),
           title='회원인 고객의 유형',plwd=3)
legend(x=1.2, y=1.3, legend = label1, bty = "n", 
       pch=20 , col=c(1,2,'gold',4) , text.col = "ivory4", cex=1, 
       pt.cex=1, y.intersp = 0.5)

mydata_c13_id<-left_join(mydata_c13_id,custom)
ggplot(mydata_c13_id,aes(CLNT_AGE,fill=CLNT_GENDER))+
  theme_bw()+geom_bar()+facet_grid(~group)

########## [DATA] class2 & class4 (비회원) ##########
final_notmember<-final_type4_1 %>% filter(CLNT_ID %in% visit_again$CLNT_ID)
final_data<-final_notmember %>% filter(CLNT_ID %in% c(class2$CLNT_ID,
                                                  class4$CLNT_ID))

mydata<-final_data

mydata[,2:11] <- lapply(mydata[,2:11], function(x) scale(x))
mymin<-as.tibble(lapply(mydata[,2:11], function(x) min(x)))
mymin
mymax<-as.tibble(lapply(mydata[,2:11], function(x) max(x)))
mymax

# class1&class3 : k=3
a2<-kmeans(mydata %>% select(-CLNT_ID),3,iter.max = 200, nstart = 5)
a2$size
mydata_c24<-mydata %>% mutate('group'=a2[['cluster']])
mydata_c24_id<-mydata_c24 %>% select(CLNT_ID,group)

mydata2_c24<-data_summ(mydata_c24)
mydata2_c24 %>% print(width=Inf)

mydata_radar<-mydata2_c24[,c(4,5,6,8,10,9,7,2,3,11)]
colnames(mydata_radar)<-colnames(mydata2)[2:11]

radar_1<-(mydata_radar[1,]-mymin)/(mymax-mymin)
radar_2<-(mydata_radar[2,]-mymin)/(mymax-mymin)
radar_3<-(mydata_radar[3,]-mymin)/(mymax-mymin)
radar<-rbind(radar_1,radar_2,radar_3)
radar

a2label<-paste0(round(a2$size/sum(a2$size)*100,1),'%')
label2<-c(paste0('브랜드 매니아형 (',a2label[1],')'),
          paste0('충성고객형 (',a2label[2],')'),
          paste0('실속형 (',a2label[3],')'))

# radarchart
radarchart(radar,pcol=c(4,1,'gold'),maxmin=F,
           vlabels = c('뷰시간','구매금액총합','구매금액평균','구매품목종류',
                       '방문횟수','구매건수','세일제품구매율','검색건수',
                       '조회수','브랜드선호도'),
           plty=1,pfcol=alpha(c(4,1,'gold'),0.3),
           title='비회원인 고객의 유형',plwd=3)
legend(x=1.2, y=1.3, legend = label2, bty = "n", 
       pch=20 , col=c(4,1,'gold') , text.col = "ivory4", cex=1, 
       pt.cex=1, y.intersp = 0.5)

########## [DATA_visit] 신규방문 vs 재방문 ###########
visit_first<-final_type %>% group_by(CLNT_ID) %>% 
  transmute('first'=min(SESS_SEQ)) %>% 
  filter(first==1) %>% distinct(CLNT_ID)
visit_again<-final_type %>% group_by(CLNT_ID) %>% 
  transmute('first'=min(SESS_SEQ)) %>% 
  filter(first>1) %>% distinct(CLNT_ID)
# 신규방문한 고객 90720명
# 재방문한 고객 831231명

## [DATA_join] 신규와 기존의 비율
total<-nrow(visit_again)+nrow(visit_first)
yes<-nrow(visit_first)
join<-data.frame('JOIN'=c('신규고객','기존고객'),
                 'n'=c(yes,total-yes))
join$fraction<-join$n/sum(join$n)
join$ymax<-cumsum(join$fraction)
join$ymin<-c(0,head(join$ymax,-1))
join$midpoint<-join$ymax-join$fraction/2
join$label<-paste0(join$JOIN, '\n', '(', 
                   round(join$n / sum(join$n) * 100, 1), "%", ')')
join
# [PLOT_p1]
p1<-ggplot(join)+theme_void()+
  geom_rect(aes(fill=JOIN,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('',values = c("#F2F2F2",'#FDE0EF'))+
  geom_text(aes(x = 3, y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "신규고객과\n 기존고객의\n 비율",size=8)
p1

########## 신규방문 vs 재방문 ###########
final_data<-final_type4_1 %>% filter(CLNT_ID %in% visit_first$CLNT_ID)
mydata<-final_data %>% select(-CLNT_ID)
mydata_first<-mydata %>% mutate('group'=1)
final_data<-final_type4_1 %>% filter(CLNT_ID %in% visit_again$CLNT_ID)
mydata<-final_data %>% select(-CLNT_ID)
mydata_again<-mydata %>% mutate('group'=2)
mydata<-rbind(mydata_first,mydata_again)
# 신규방문한 고객 group==1
# 재방문한 고객 group==2

mydata[,1:10] <- lapply(mydata[,1:10], function(x) scale(x))
mymin<-as.tibble(lapply(mydata[,1:10], function(x) min(x)))
mymin
mymax<-as.tibble(lapply(mydata[,1:10], function(x) max(x)))
mymax

mydata2<-data_summ(mydata)

mydata_radar<-mydata2[,c(4,5,6,8,10,9,7,2,3,11)]
colnames(mydata_radar)<-colnames(mydata)[1:10]

radar_first<-(mydata_radar[1,]-mymin)/(mymax-mymin)
radar_again<-(mydata_radar[2,]-mymin)/(mymax-mymin)
radar<-rbind(radar_first,radar_again)
radar

radarchart(radar,
           plty=1,pfcol=alpha(1:3,0.2),maxmin=F,
           vlabels = c('뷰시간','구매금액총합','구매금액평균','구매품목종류',
                       '방문횟수','구매건수','세일제품구매율','검색건수',
                       '조회수','브랜드선호도'),
           title='신규고객 vs 기존고객',plwd=3)
legend(x=1, y=1.5, legend = c('신규고객','기존고객'), bty = "n", 
       pch=20 , col=1:2 , text.col = "darkgrey", cex=1, 
       pt.cex=1, y.intersp = 0.5)

###### 신규방문 vs 재방문 (고객정보) ######
first<-final %>% filter(CLNT_ID %in% visit_first$CLNT_ID) %>% 
  select(CLNT_ID,CLNT_GENDER,myCLNT_AGE,myCLAC_NM,DVC_CTG_NM,
         ZON_NM,CITY_NM,myPD_BUY_TOT)
again<-final %>% filter(CLNT_ID %in% visit_again$CLNT_ID) %>% 
  select(CLNT_ID,CLNT_GENDER,myCLNT_AGE,myCLAC_NM,DVC_CTG_NM,
         ZON_NM,CITY_NM,myPD_BUY_TOT)

first_unique<-first %>% 
  distinct(CLNT_ID,CLNT_GENDER,myCLNT_AGE,DVC_CTG_NM,ZON_NM,CITY_NM)
again_unique<-again %>% 
  distinct(CLNT_ID,CLNT_GENDER,myCLNT_AGE,DVC_CTG_NM,ZON_NM,CITY_NM)

## [DATA_join] 회원의 유무
total<-nrow(first_unique)
yes<-nrow(first_unique %>% filter(!is.na(first_unique$CLNT_GENDER)))
join<-data.frame('JOIN'=c('YES','NO'),
                 'n'=c(yes,total-yes))
join$fraction<-join$n/sum(join$n)
join$ymax<-cumsum(join$fraction)
join$ymin<-c(0,head(join$ymax,-1))
join$midpoint<-join$ymax-join$fraction/2
join$label<-paste0(join$JOIN, '\n', '(', 
                   round(join$n / sum(join$n) * 100, 1), "%", ')')
join
# [PLOT_p1]
p1<-ggplot(join)+theme_void()+
  geom_rect(aes(fill=JOIN,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('',values = c("#F2F2F2", "#CCEBC5"))+
  geom_text(aes(x = 3, y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "신규고객의 \n회원가입의 유무",size=8)
p1

## [DATA_join] 회원의 유무
total<-nrow(again_unique)
yes<-nrow(again_unique %>% filter(!is.na(again_unique$CLNT_GENDER)))
join<-data.frame('JOIN'=c('YES','NO'),
                 'n'=c(yes,total-yes))
join$fraction<-join$n/sum(join$n)
join$ymax<-cumsum(join$fraction)
join$ymin<-c(0,head(join$ymax,-1))
join$midpoint<-join$ymax-join$fraction/2
join$label<-paste0(join$JOIN, '\n', '(', 
                   round(join$n / sum(join$n) * 100, 1), "%", ')')
join
# [PLOT_p2]
p2<-ggplot(join)+theme_void()+
  geom_rect(aes(fill=JOIN,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('',values = c("#F2F2F2", "#CCEBC5"))+
  geom_text(aes(x = 3, y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "기존고객의 \n회원가입의 유무",size=8)
p2

grid.arrange(p1,p2,nrow=1)

## [DATA_device] 기기유형
# 신규방문
total<-nrow(first_unique)
desktop<-nrow(first_unique %>% filter(DVC_CTG_NM=='desktop'))
mobile<-nrow(first_unique %>% filter(DVC_CTG_NM=='mobile'))
tablet<-nrow(first_unique %>% filter(DVC_CTG_NM=='tablet'))
join<-data.frame('device'=c('데스크탑','모바일','태블릿PC'),
                 'n'=c(desktop,mobile,tablet))
join$fraction<-join$n/sum(join$n)
join$ymax<-cumsum(join$fraction)
join$ymin<-c(0,head(join$ymax,-1))
join$midpoint<-join$ymax-join$fraction/2
join$label<-paste0(join$device, '\n', '(', 
                   round(join$n / sum(join$n) * 100, 1), "%", ')')
join
# [PLOT_p1]
p1<-ggplot(join)+theme_void()+
  geom_rect(aes(fill=device,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('',values = c( "#CBD5E8", "#FFF2AE", "darkgrey"))+
  geom_text(aes(x = 3, y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "신규고객의 \n기기유형",size=8)
p1

total<-nrow(again_unique)
desktop<-nrow(again_unique %>% filter(DVC_CTG_NM=='desktop'))
mobile<-nrow(again_unique %>% filter(DVC_CTG_NM=='mobile'))
tablet<-nrow(again_unique %>% filter(DVC_CTG_NM=='tablet'))
join<-data.frame('device'=c('데스크탑','모바일','태블릿PC'),
                 'n'=c(desktop,mobile,tablet))
join$fraction<-join$n/sum(join$n)
join$ymax<-cumsum(join$fraction)
join$ymin<-c(0,head(join$ymax,-1))
join$midpoint<-join$ymax-join$fraction/2
join$label<-paste0(join$device, '\n', '(', 
                   round(join$n / sum(join$n) * 100, 1), "%", ')')
join
# [PLOT_p2]
# 재방문
p2<-ggplot(join)+theme_void()+
  geom_rect(aes(fill=device,ymax=ymax,ymin=ymin,xmax=4,xmin=2))+
  coord_polar(theta='y')+
  xlim(c(0,4))+theme(legend.position = 'none')+
  scale_fill_manual('',values = c( "#CBD5E8", "#FFF2AE", "darkgrey"))+
  geom_text(aes(x = 3, y = midpoint, label = label),size=5)+
  annotate("text", x = 0, y = 0, label = "기존고객의 \n기기유형",size=8)
p2

grid.arrange(p1,p2,nrow=1)

#--------------------------------------------------------------#
########## [FUNCTION] do_apriori_internal ###############
do_apriori_internal <- function(df, subject_col, key_col, minlen=1, maxlen=5,
                                min_support=0.1, max_support=1, min_confidence=0.5, 
                                lhs=NULL, rhs=NULL,
                                max_basket_items = 10) {
  validate_empty_data(df)
  
  loadNamespace("dplyr")
  loadNamespace("tidyr")
  loadNamespace("arules")
  loadNamespace("stringr")
  
  if(subject_col %nin% colnames(df)){
    stop(paste(subject_col, "is not in colums", sep=" "))
  }
  
  if(!key_col %in% colnames(df)){
    stop(paste(key_col, "is not in colums", sep=" "))
  }
  
  grouped_col <- grouped_by(df)
  
  cnames <- avoid_conflict(grouped_col, c("lhs", "rhs", "support", "confidence", "lift"))
  
  # This is executed by each group
  do_apriori_each <- function(df){
    
    # If there are too many items in a basket, combinations to search tends to explode.
    # To avoid it, when called from Exploratory Analytics View, we limit items (subject_col)
    # in baskets (key_col) only to top frequent items in each basket.
    # Default is set to 10 so that default maxlen 5 (we also reduced this from 10) fits in it.
    if (!is.null(max_basket_items)) {
      df <- df %>% group_by(!!rlang::sym(key_col), !!rlang::sym(subject_col)) %>%
        summarize(.tmp_num_rows = n()) %>%
        top_n(max_basket_items, .tmp_num_rows) %>%
        ungroup()
    }
    
    mat <- sparse_cast(df, subject_col, key_col)
    
    # create appearance list
    if(is.null(lhs)){
      if(is.null(rhs)){
        # lhs and rhs are both NULL
        appearance <- NULL
      } else {
        # lhs is NULL and rhs is not NULL
        # find matched values by stringr::str_detect in subject_col to limit rhs
        appearance <- list(rhs = rhs, default = "lhs")
      }
    } else {
      if(is.null(rhs)){
        # rhs is NULL and lhs is not NULL
        appearance <- list(lhs = lhs, default = "rhs")
      } else {
        # rhs are both not NULL
        appearance <- list(lhs = lhs, rhs = rhs, default = "none")
      }
    }
    rules <- NULL
    # capture.output suppress summary output from arules::apriori function
    capture.output({
      rules <- arules::apriori(
        mat,
        parameter = list(
          minlen=minlen+1, 
          maxlen=maxlen+1,
          support=min_support,
          confidence = min_confidence,
          target="rules",
          smax=max_support
        ),
        appearance = appearance)
    })
    lhs_val <- vapply(arules::LIST(rules@lhs), function(items){
      paste(items, collapse=", ")
    }, FUN.VALUE = "")
    rhs_val <- vapply(arules::LIST(rules@rhs), function(items){
      paste(items, collapse=", ")
    }, FUN.VALUE = "")
    
    # remove empty strings if lhs or rhs is indicated
    if(!is.null(lhs) & !is.null(rhs)){
      filtered <- lhs_val != "" & rhs_val != ""
    } else if(!is.null(lhs)){
      filtered <- lhs_val != ""
    } else if(!is.null(rhs)){
      filtered <- rhs_val != ""
    } else {
      filtered <- TRUE
    }
    
    quality <- rules@quality
    ret <- data.frame(
      lhs_val[filtered],
      rhs_val[filtered],
      quality$support[filtered],
      quality$confidence[filtered],
      quality$lift[filtered], stringsAsFactors = FALSE)
    colnames(ret) <- cnames
    ret
  }
  
  ret <- df %>%
    dplyr::do_(.dots = setNames(~do_apriori_each(.), cnames[[5]]))
  
  # this happens when lhs and rhs are indicated and no matching rule was found
  if(nrow(ret) == 0){
    stop("No matching rule was found.")
  }
  
  ret <- ret %>% dplyr::ungroup() %>% unnest_with_drop_(cnames[[5]])
  if(all(is.na(ret[[1]])) & nrow(ret)==1){
    stop("No rule was found. Smaller minimum support or minimum confidence might find rules.")
  }
  ret
}

########## [FUNCTION] do_apriori_ ###########
#' Find association rules from itemsets.
#' It calculates support, confidence and lift values from combinations of items.
#' @export
do_apriori_ <- function(df, subject_col, key_col, minlen=1, maxlen=5, min_support=0.1, 
                        max_support=1, min_confidence=0.5, lhs=NULL, rhs=NULL,
                        max_basket_items=10){
  if (min_support == "auto") { # search for min_support that returns some rules.
    ret <- NULL
    curr_min_support = 0.1
    while (curr_min_support >= 0.00001) {
      ret <- tryCatch(do_apriori_internal(df, subject_col, key_col, minlen, maxlen, 
                                          curr_min_support, max_support, min_confidence, 
                                          lhs, rhs,max_basket_items),
                      error=function(e) {
                        if (e$message == "No rule was found. Smaller minimum support \n 
                            or minimum confidence might find rules.") {
                          TRUE
                          } 
                        else {stop(e)
                          }
                        })
      if (is.logical(ret) && ret == TRUE) {
        curr_min_support <- curr_min_support/10
        next
      }
      break
    }
    if (is.logical(ret) && ret == TRUE) { 
      # after auto search for min_support, still no rule found.
      stop("There is no rules found with the criteria. You might want to set \n
           smaller minimum support or confidence values from the property to find the rules.")
    }
    ret
  }
  else {
    do_apriori_internal(df, subject_col, key_col, minlen, maxlen, min_support,
                        max_support, min_confidence, lhs, rhs, max_basket_items)
  }
}

########## [FUNCTION] do_apriori ###########

#' Find association rules from itemsets.
#' It calculates support, confidence and lift values from combinations of items.
#' @export
do_apriori <- function(df, subject, key, minlen=1, maxlen=5, min_support=0.1, 
                       max_support=1, min_confidence=0.5, lhs=NULL, rhs=NULL, 
                       max_basket_items=10){
  subject_col <- col_name(substitute(subject))
  key_col <- col_name(substitute(key))
  do_apriori_(df, subject_col, key_col, minlen, maxlen, min_support, max_support, 
              min_confidence, lhs, rhs, max_basket_items)
}

########## [FUNCTION] col_name ##########
col_name <- function(x, default = stop("Please supply column name", call. = FALSE)){
  if (is.character(x))
    return(x)
  if (identical(x, quote(expr = )))
    return(default)
  if (is.name(x))
    return(as.character(x))
  if (is.null(x))
    return(x)
  stop("Invalid column specification", call. = FALSE)
}

########## [FUNCTION] validate_empty_data ###########
validate_empty_data <- function(df) {
  if(nrow(df) == 0) {stop("Input data frame is empty.")}
  df
}

########## [FUNCTION] %nin% ###########
`%nin%` <- function (x, table) match(x, table, nomatch = 0L) == 0L

########## [FUNCTION] grouped_by ###########
grouped_by <- function(df){
  # remove backtick for escaped column names
  stringr::str_replace_all(as.character(attr(df, "vars")), "`", "")
}

########## [FUNCTION] avoid_conflict ##########
avoid_conflict <- function(origin, new, suffix = ".new"){
  conflict <- new %in% origin
  while(any(conflict)){
    new[conflict] <- paste(new[conflict], suffix, sep="")
    conflict <- new %in% origin
  }
  new
}

########## [FUNCTION] sparse_cast #############
sparse_cast <- function(data, row, col, val=NULL, fun.aggregate=sum, count = FALSE){
  loadNamespace("dplyr")
  loadNamespace("tidyr")
  loadNamespace("Matrix")
  
  if(!row %in% colnames(data)){
    stop(paste0(row, " is not in column names"))
  }
  
  if(!col %in% colnames(data)){
    stop(paste0(col, " is not in column names"))
  }
  
  # remove NA from row and col
  data <- tidyr::drop_na_(data, c(row, col))
  
  if(is.null(val)){
    # if there's no value column, it creates binary sparse matrix.
    row_fact <- as.factor(data[[row]])
    col_fact <- as.factor(data[[col]])
    if(count){
      sparseMat <- xtabs(as.formula(paste0("~", "`", row , "`", "+", "`", col, "`")), 
                         data = data, sparse = TRUE)
    } else {
      sparseMat <- Matrix::sparseMatrix(
        i = as.integer(row_fact),
        j = as.integer(col_fact),
        dims = c(length(levels(row_fact)), length(levels(col_fact))),
        dimnames = list(levels(row_fact), levels(col_fact))
      )
    }
  }else{
    if(!val %in% colnames(data)){
      stop(paste0(val, " is not in column names"))
    }
    # Basic behaviour of Matrix::sparseMatrix is sum.
    # If fun.aggregate is different, it should be aggregated by it.
    if(!identical(fun.aggregate, sum)){
      # create a formula to aggregate duplicated row and col pairs
      # ex: ~mean(val)
      fml <- as.formula(paste0("~", as.character(substitute(fun.aggregate)), "(", val, ")"))
      
      # execute the formula to each row and col pair
      data <- dplyr::group_by(data, !!!rlang::syms(c(row, col))) %>%
        dplyr::summarise_(.dots=setNames(list(fml), val)) %>%
        dplyr::ungroup()
    }
 
    row_fact <- as.factor(data[[row]])
    col_fact <- as.factor(data[[col]])
    
    na_index <- is.na(data[[val]])
    zero_index <- data[[val]] == 0
    
    valid_index <- na_index | !zero_index
    
    sparseMat <- Matrix::sparseMatrix(
      i = as.integer(row_fact[valid_index]),
      j = as.integer(col_fact[valid_index]),
      x = as.numeric(data[[val]][valid_index]),
      dims = c(length(levels(row_fact)), length(levels(col_fact))),
      dimnames = list(levels(row_fact), levels(col_fact))
    )
  }
  
  sparseMat
}

########## [FUNCTION] unnest_with_drop_ ##################
unnest_with_drop_ <- function(..., .drop = TRUE){
  tidyr::unnest_(..., .drop = .drop)
}

########## [DATA] 연관성분석 (대분류; myCLAC_NM) #############
temp1<-final %>% distinct(CLNT_ID,SESS_DT,myCLAC_NM) %>% 
  group_by(CLNT_ID,SESS_DT) %>% filter(n()>1)
temp2<-temp1 %>% group_by(CLNT_ID,SESS_DT) %>% 
  arrange(CLNT_ID,myCLAC_NM) %>% dplyr::mutate('obs'=1:n())
temp3<-temp2 %>% spread(key=obs,value = myCLAC_NM)
temp4<-as.data.frame(temp3)[,3:9]
temp5<-temp4 %>% dplyr::mutate('transaction.id'=row_number())
temp5<-temp5 %>% gather(`1`,`2`,`3`,`4`,`5`,`6`,`7`,
                        key=key,value=product)
temp5<-temp5[complete.cases(temp5),]
temp5<-temp5 %>% arrange(transaction.id,key)

result1<-do_apriori(temp5,subject = product,key = transaction.id,
                   min_support = 0.0001, min_confidence = 0.6)
result1

########## [DATA] 연관성분석 (중분류; CLAC2_NM) ############
temp11<-final %>% distinct(CLNT_ID,SESS_DT,CLAC2_NM) %>% 
  group_by(CLNT_ID,SESS_DT) %>% filter(n()>1)
temp12<-temp11 %>% group_by(CLNT_ID,SESS_DT) %>% 
  arrange(CLNT_ID,CLAC2_NM) %>% mutate('obs'=1:n())
temp13<-temp12 %>% spread(key=obs,value = CLAC2_NM)
temp14<-as.data.frame(temp13)[,3:19]

temp15<-temp14 %>% mutate('transaction.id'=row_number())
temp15<-temp15 %>% gather(`1`,`2`,`3`,`4`,`5`,`6`,`7`,`8`,`9`,`10`,
                          `11`,`12`,`13`,`14`,`15`,`16`,`17`,
                          key=key,value=product)
temp15<-temp15[complete.cases(temp15),]
temp15<-temp15 %>% arrange(transaction.id,key)

result2<-do_apriori(temp15,subject = product,key = transaction.id,
                   min_support = 0.001, min_confidence = 0.5, max_basket_items = 2)
result2

result3<-do_apriori(temp15,subject = product,key = transaction.id,
                    min_support = 0.00006, min_confidence = 0.8)
result3


########## 상품군별 검색건수(search1,2) ------------------------------------------- #####

search1 <- read.csv("lpoint2.csv")
search2 <- read.csv("lpoint3.csv")
master_brand <- merge(product, master, by="PD_C") %>% select(PD_C, PD_NM, PD_BRA_NM, CLAC1_NM:CLAC3_NM) %>% filter(!duplicated(PD_C))

brand_clac <- group_by(master_brand, PD_BRA_NM, CLAC1_NM, CLAC2_NM, CLAC3_NM) %>% count
brand_clac1 <- group_by(master_brand, PD_BRA_NM) %>% summarise(myCLAC1_CT=length(unique(CLAC1_NM)))
brand_clac2 <- group_by(master_brand, PD_BRA_NM) %>% summarise(myCLAC2_CT=length(unique(CLAC2_NM)))
brand_clac3 <- group_by(master_brand, PD_BRA_NM) %>% summarise(myCLAC3_CT=length(unique(CLAC3_NM)))
brand_clac_ct <- cbind(brand_clac1, brand_clac2[,2], brand_clac3[,2])


## brand name으로 분류

search1_brand <- read.csv("search1_brand.csv")
mysearch1_2 <- read.csv("mysearch1_2.csv")
mysearch1_4 <- read.csv("mysearch1_4.csv")

search1_brand["myGROUP"] <- rep("", nrow(search1_brand))
search1_brand["myCLAC1_NM"] <- rep("", nrow(search1_brand))
search1_brand["myCLAC2_NM"] <- rep("", nrow(search1_brand))
search1_brand["myCLAC3_NM"] <- rep("", nrow(search1_brand))
search1_brand <- select(search1_brand, KWD, myBRD, myGROUP, myKWD, myCLAC1_NM, myCLAC2_NM, myCLAC3_NM)

mysearch1_a <- rbind(mysearch1_2[mysearch1_2$myCLAC1_NM!="" | mysearch1_2$myCLAC2_NM!="" | mysearch1_2$myCLAC3_NM!="",],
  mysearch1_4[mysearch1_4$myCLAC1_NM!="" | mysearch1_4$myCLAC2_NM!="" | mysearch1_4$myCLAC3_NM!="",])
mysearch1_b <- rbind(search1_brand[search1_brand$myKWD == "",], mysearch1_4[mysearch1_4$myCLAC1_NM=="" & mysearch1_4$myCLAC2_NM=="" & mysearch1_4$myCLAC3_NM=="" & mysearch1_4$myBRD!="",])
mysearch1_c <- mysearch1_4[mysearch1_4$myCLAC1_NM=="" & mysearch1_4$myCLAC2_NM=="" & mysearch1_4$myCLAC3_NM=="" & mysearch1_4$myBRD=="",]

colnames(mysearch1_b)[2] <- "PD_BRA_NM"
mysearch1_b <- filter(brand_clac_ct, myCLAC2_CT==1) %>% left_join(brand_clac[!duplicated(brand_clac$PD_BRA_NM),]) %>% select(PD_BRA_NM, CLAC2_NM) %>%
  right_join(mysearch1_b) %>% select(KWD, myBRD=PD_BRA_NM, myGROUP:myCLAC1_NM, myCLAC2_NM=CLAC2_NM, myCLAC3_NM)
colnames(mysearch1_b)[2] <- "PD_BRA_NM"
mysearch1_b <- filter(brand_clac_ct, myCLAC1_CT==1) %>% left_join(brand_clac[!duplicated(brand_clac$PD_BRA_NM),]) %>% select(PD_BRA_NM, CLAC1_NM) %>%
  right_join(mysearch1_b) %>% select(KWD, myBRD=PD_BRA_NM, myGROUP:myKWD, myCLAC1_NM=CLAC1_NM, myCLAC2_NM:myCLAC3_NM)

mysearch1 <- rbind(mysearch1_a, mysearch1_b, mysearch1_c)


## clac3으로 분류된 것 -> clac2로 분류

mymaster <- group_by(master_brand, CLAC3_NM, CLAC2_NM, CLAC1_NM) %>% count %>% select(CLAC1_NM:CLAC3_NM)
mysearch1_bi2uni <- read.csv("mysearch1_bi2uni.csv", fileEncoding="utf-8")

mysearch1_a <- mysearch1_bi2uni[mysearch1_bi2uni$myCLAC2_NM == "" & mysearch1_bi2uni$myCLAC3_NM != "",] %>%
  left_join(mysearch1_a, mymaster, by=c("myCLAC3_NM"="CLAC3_NM")) %>%
  select(mysearch1_a, KWD:myKWD, myCLAC1_NM, myCLAC2_NM=CLAC2_NM, myCLAC3_NM)
mysearch1_b <- mysearch1_bi2uni[mysearch1_bi2uni$myCLAC2_NM != "" | mysearch1_bi2uni$myCLAC3_NM == "",]
mysearch1 <- rbind(mysearch1_a, mysearch1_b)

mysearch1 <- left_join(search1, mysearch1, by=c("KWD_NM"="KWD")) %>% select(-myCLAC3_NM)


## 상품군별 검색건수 생성

#search1
search1_week <- left_join(mysearch1, final[!duplicated(final$SESS_ID), c("SESS_ID", "myWEEK")]) %>%
  select(SESS_ID, myWEEK, KWD_NM, SEARCH_CNT, myBRD, myCLAC1_NM, myCLAC2_NM)
search1_final <- filter(search1_week, myCLAC2_NM!="") %>% group_by(myCLAC2_NM, myWEEK) %>% count %>%
  select(CLAC2_NM=myCLAC2_NM, myWEEK, mySEARCH1=n) %>% filter(complete.cases(search1_final)) %>%
  filter(CLAC2_NM!="의류세트" & CLAC2_NM!="스포츠화" & CLAC2_NM!="신발" & CLAC2_NM!="지갑" & CLAC2_NM!="의류상의" & CLAC2_NM!="의류아우터" & CLAC2_NM!="속옷" & CLAC2_NM!="일반스포츠의류")

#search2
search2_week <- left_join(mysearch2, final[!duplicated(final$SESS_ID), c("SESS_DT", "myWEEK")]) %>%
  select(SESS_ID, myWEEK, KWD_NM, SEARCH_CNT, myBRD, myCLAC1_NM, myCLAC2_NM)
search2_final <- filter(search2_week, myCLAC2_NM!="") %>% group_by(myCLAC2_NM, myWEEK) %>% summarise(sum(SEARCH_CNT)) %>%
  select(CLAC2_NM=myCLAC2_NM, myWEEK, mySEARCH2='sum(SEARCH_CNT)') %>% filter(complete.cases(search2_final))  %>%
  filter(CLAC2_NM!="의류세트" & CLAC2_NM!="스포츠화" & CLAC2_NM!="신발" & CLAC2_NM!="지갑" & CLAC2_NM!="의류상의" & CLAC2_NM!="의류아우터" & CLAC2_NM!="속옷" & CLAC2_NM!="일반스포츠의류")


########## 재구매율(rebuy) ----------------------------------------------- #####

# 6개월 간 재구매 비율
rebuy <- final %>% distinct(CLNT_ID, CLAC2_NM, SESS_ID) %>% group_by(CLNT_ID, CLAC2_NM) %>% count() %>%
  arrange(CLNT_ID) %>% mutate(obs = 1:n(), repurchase = ifelse(obs==1, n-1, n)) %>%
  group_by(CLAC2_NM) %>% summarise(myREBUY = sum(repurchase, na.rm=T))

mycount <- group_by(final, CLAC2_NM) %>% count
rebuy_p <- left_join(rebuy, mycount) %>% mutate(myREBUY_P = myREBUY/n)


# 주별 재구매 비율
rebuy_week <- final %>% distinct(CLNT_ID, CLAC2_NM, SESS_ID, myWEEK) %>%
  group_by(CLNT_ID, CLAC2_NM, myWEEK) %>% count() %>%
  group_by(CLNT_ID, CLAC2_NM) %>% arrange(CLNT_ID, myWEEK) %>%
  mutate(obs = 1:n(), repurchase = ifelse(obs==1, n-1, n)) %>%
  group_by(CLAC2_NM, myWEEK) %>% summarise(myREBUY_WEEK = sum(repurchase, na.rm=T))

rebuy_week_p <- left_join(rebuy_week, select(count, -myCLAC_NM)) %>% mutate(myREBUY_WEEK_P = myREBUY_WEEK/n)
cor(rebuy_week_p$myREBUY_WEEK_P, rebuy_week_p$n)


########## 제품별 인기 brand 여부 ----------------------------------------------- #####

# brand name 전처리 (파이썬)
final_br <- read.csv("final_br.csv", fileEncoding="utf-8")
final$PD_BRA_NM <- final_br$PD_BRA_NM

best <- c()
for(clac_nm in unique(final$CLAC1_NM)){
  sort <- filter(final, CLAC1_NM==clac_nm) %>% select(PD_C, PD_BRA_NM) %>% group_by(PD_BRA_NM) %>% count() %>% arrange(desc(n))
  best <- c(best, as.character(sort$PD_BRA_NM[1:as.integer(nrow(sort)*0.05)]))
}

master_brand$myPOP_BR <- 0
master_brand[master_brand$PD_BRA_NM %in% best, "myPOP_BR"] <- 1


########## 대분류별 선호지수 예측치 bar graph ----------------------------------------- #####

factor <- read.csv("predict_factor.csv", fileEncoding="utf-8")
factor <- select(factor, CLAC2_NM, myPRED_COUNT = predicted_count2) %>% left_join(distinct(final, myCLAC_NM, CLAC1_NM, CLAC2_NM))

ggplot(filter(factor, myCLAC_NM==10), aes(x=reorder(CLAC2_NM, -myPRED_COUNT), y=myPRED_COUNT, fill=CLAC1_NM)) +
  geom_bar(stat = "identity") + theme_light() + scale_fill_brewer(palette="Set3") +
  labs(x="", y="선호지수", fill="대분류") + theme(axis.text.x = element_text(angle = 45, hjust = 1))

input = final[!is.na(final$PD_C),] %>% filter(myWEEK!='2018-09-30')

hit = read.csv("C:/Users/jeeyeon/Desktop/data/hit.csv"); hit = hit %>% mutate(hit = myHIT2)
# hit = input %>% group_by(myCLAC_NM,CLAC2_NM,myWEEK) %>% summarize(hit = mean(HITS_SEQ,na.rm =T))
total = input %>% group_by(myCLAC_NM,CLAC1_NM,CLAC2_NM,myWEEK) %>% summarize(total = sum(myPD_BUY_TOT,na.rm =T))
client = input %>% group_by(CLNT_ID,myCLAC_NM,CLAC1_NM,CLAC2_NM,myWEEK) %>% count() %>% 
  group_by(myCLAC_NM,CLAC1_NM,CLAC2_NM,myWEEK) %>% count(); client$client = client$nn
sale = input %>% group_by(myCLAC_NM,CLAC1_NM,CLAC2_NM,myWEEK) %>% summarize(sale = sum(mySALE_PD, na.rm =T)) 
rebuy = input %>% distinct(CLNT_ID, CLAC1_NM,CLAC2_NM, SESS_ID, myWEEK) %>%
  group_by(CLNT_ID, CLAC2_NM, myWEEK) %>% count() %>%
  group_by(CLNT_ID, CLAC2_NM) %>% arrange(CLNT_ID, myWEEK) %>%
  mutate(obs = 1:n(), repurchase = ifelse(obs==1, n-1, n)) %>%
  group_by(CLAC2_NM, myWEEK) %>% summarise(rebuy = sum(repurchase, na.rm=T))

mytable = input %>% group_by(myCLAC_NM,CLAC1_NM,CLAC2_NM,myWEEK) %>% count() %>% 
  left_join(hit) %>% left_join(total) %>% left_join(client) %>% left_join(sale) %>% 
  left_join(search1) %>% left_join(search2) %>% left_join(rebuy) %>% 
  select(myCLAC_NM,CLAC1_NM,CLAC2_NM,myWEEK,hit,n,total,client,search1,search2,sale,rebuy)

final_index_table= mytable %>% ungroup(myCLAC_NM) %>% mutate( count = n,
                                                              total.per.count = total/n, # 건당 평균구매액
                                                              total.per.client = total/client,#고객당 평균구매액
                                                              sale = sale/n,
                                                              rebuy = rebuy/n)
### PCA, FACTOR 에 넣을 numeric 변수들만 뽑아놓자 --------------- --- ---
dataset = scale(select(final_index_table,hit,count,total,client,search1,search2,rebuy))

# 변수들의 단위가 다른 것으로부터 나오는 BIAS 피하기 위해서 SCALING
dataset[is.na(dataset)] = 0
sum(is.na(dataset))

# correlation matrix --------------------------------------------------# 
M = dataset[complete.cases(dataset),]; M = cor(M)
corrplot(M, type="upper",  tl.col="black", tl.srt=45, method="number")
# ---------------------------------------------------------------------#

# PCA
# PCA = prcomp(dataset,center = T, scale. = T) 
PCA = prcomp(dataset)
summary(PCA)
print(PCA)
PCA$rotation[,1]
biplot(PCA)
screeplot(PCA, main = "", col = "green", type = "lines", pch = 1, npcs = length(PCA$sdev))

# Factor Analysis

FA = principal(dataset, rotate="none")
FA$values
plot(FA$values, type="b", xlab ="인자수", ylab = "고유근")
biplot(FA)

FACTOR = factanal(dataset, factors = 1, rotation = "varimax")   # -> FACTOR$loadings[,1]
FACTOR$loadings[,1]

temp = scale(select(final_index_table,count,total,client,search1,search2))
FACTOR_temp = factanal(temp, factors = 1, rotation = "varimax")   # -> FACTOR$loadings[,1]
FACTOR_temp$loadings[,1]


final_index_table = final_index_table %>% select(myCLAC_NM,CLAC1_NM,CLAC2_NM,myWEEK) %>% cbind(dataset) %>% 
  mutate(PCA = as.numeric(as.matrix(dataset) %*% as.matrix(PCA$rotation[,1] )),
         FACTOR_raw = as.numeric(as.matrix(dataset) %*% as.matrix(FACTOR$loadings[,1])),
         FACTOR = ((FACTOR_raw - min(FACTOR_raw))/ (max(FACTOR_raw)-min(FACTOR_raw)))*100 )
plot_table = final_index_table 


##### 값 높은 중분류 순서  ####

temp = final_index_table %>% group_by(myCLAC_NM,CLAC2_NM) %>% 
  summarise(topfactor= sum(FACTOR, na.rm = T)) %>% arrange(desc(topfactor,myWEEK,CLAC2_NM));n = nrow(temp)

gr1 = temp[1:10,] ; gr1 = gr1$CLAC2_NM
gr2 = temp[11:20,] ; gr2 = gr2$CLAC2_NM
gr3 = temp[21:30,] ; gr3 = gr3$CLAC2_NM
gr4 = temp[31:40,] ; gr4 = gr4$CLAC2_NM
gr5 = temp[41:50,] ; gr5 = gr5$CLAC2_NM
gr6 = temp[51:60,] ; gr6 = gr6$CLAC2_NM
gr7 = temp[61:70,] ; gr7 = gr7$CLAC2_NM
gr8 = temp[71:80,] ; gr8 = gr8$CLAC2_NM
gr9 = temp[81:90,] ; gr9 = gr9$CLAC2_NM
gr10 = temp[91:100,] ; gr10 = gr10$CLAC2_NM
gr11 = temp[101:110,] ; gr11 = gr11$CLAC2_NM
gr12 = temp[111:120,] ; gr12 = gr12$CLAC2_NM
gr13 = temp[121:128,] ; gr13 = gr13$CLAC2_NM

table = final_index_table[final_index_table$CLAC2_NM %in% gr1,] 
table = final_index_table[final_index_table$CLAC2_NM %in% gr2,] 
table = final_index_table[final_index_table$CLAC2_NM %in% gr3,] 

table = final_index_table[final_index_table$CLAC2_NM %in% gr4,] 
table = final_index_table[final_index_table$CLAC2_NM %in% gr5,] 
table = final_index_table[final_index_table$CLAC2_NM %in% gr6,] 

table = final_index_table[final_index_table$CLAC2_NM %in% gr7,] 
table = final_index_table[final_index_table$CLAC2_NM %in% gr8,] 
table = final_index_table[final_index_table$CLAC2_NM %in% gr9,]

table = final_index_table[final_index_table$CLAC2_NM %in% gr10,]
table = final_index_table[final_index_table$CLAC2_NM %in% gr11,] 
table = final_index_table[final_index_table$CLAC2_NM %in% gr12,] 
table = final_index_table[final_index_table$CLAC2_NM %in% gr13,] 

ggplot(data=table, aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM,group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 9),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 


##### 환경적 요인별로 보자     ######

# 1    4,5월 증가 -> 어린이날, 어버이날
family = final_index_table %>% filter(CLAC2_NM == "공기청정/가습/제습"|
                                        CLAC2_NM == "남성등산/아웃도어의류"| CLAC2_NM == "홍삼/인삼가공식품"|
                                        CLAC2_NM == "골프")

family1 = final_index_table %>% filter(CLAC2_NM == "남아완구"| CLAC2_NM == "교육완구"|CLAC2_NM == "여아완구"|
                                         CLAC2_NM == "여아의류상의"|CLAC2_NM == "인라인/스케이트보드/킥보드")

ggplot(data=family , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 
ggplot(data=family1 , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired")


# 2    7,8월 증가 -> 여름 
summer = final_index_table %>% filter(CLAC2_NM == "수영/물놀이"|CLAC2_NM == "냉방가전")

summer1 = final_index_table %>% filter(CLAC2_NM == "모자"|CLAC2_NM == "안경/선글라스"|
                                         CLAC2_NM == "선케어"|CLAC2_NM == "우산/양산류"|CLAC2_NM == "캠핑"|
                                         
                                         CLAC2_NM == "생수"|CLAC2_NM == "두유"|
                                         CLAC2_NM == "닭고기류"|CLAC2_NM == "건강보조식품")

summer2 = final_index_table %>% filter(CLAC2_NM == "화장지/티슈"|CLAC2_NM == "여성위생용품"|
                                         CLAC2_NM == "모바일상품권"|CLAC2_NM == "밀폐/보관용기"|
                                         
                                         CLAC2_NM == "시공/DIY가구")

ggplot(data=summer , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 
ggplot(data=summer1 , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 
ggplot(data=summer2 , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 


# 3. 9월 증가 -> 추석
holiday = final_index_table %>% filter(CLAC2_NM == "축산선물세트"| CLAC2_NM == "영양제"| CLAC2_NM == "건강진액"| 
                                         CLAC2_NM == "홍삼/인삼가공식품"|CLAC2_NM == "기능성음료"|
                                         CLAC2_NM == "국산과일"| CLAC2_NM == "견과류"|CLAC2_NM == "남성의류아우터")

holiday1 = final_index_table %>% filter(CLAC2_NM == "유아의류아우터"|CLAC2_NM == "여아의류아우터"|
                                          CLAC2_NM == "유아동일반스포츠의류" )

ggplot(data=holiday , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 
ggplot(data=holiday1 , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 


# 4. 1인가구 증가 
solo = final_index_table %>% filter(CLAC2_NM == "포장반찬"|CLAC2_NM == "냉동간편식"|
                                      CLAC2_NM == "시공/DIY가구" )

ggplot(data=solo , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 

# 5. 여성 패션/ 잡화 추세 비슷 
woman = final_index_table %>% filter(CLAC2_NM == "여성의류전신"|CLAC2_NM == "여성의류하의"|
                                       CLAC2_NM == "여성화"|CLAC2_NM == "여성속옷"|
                                       CLAC2_NM == "남성의류하의")

ggplot(data=woman , aes(x=myWEEK, y=FACTOR, colour=CLAC2_NM, group=CLAC2_NM)) + 
  theme_bw() + geom_line(size = 1.5) + geom_point(size=1)+ 
  ylab("선호지수")+xlab(NULL)+ labs(colour="중분류")  + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1,size = 7),axis.title.x = element_text(angle=0, size=16),
        axis.title.y = element_text(size=16)) + scale_colour_brewer(palette="Paired") 



##### 선호지수예측         ############

pred_data = final_index_table %>% filter(CLAC2_NM == "남성의류상의") %>% select(myWEEK, FACTOR ) %>% mutate(n = FACTOR)
pred_data = pred_data %>% mutate(y = cumsum(n), y1 = lag(y),t = 1:n() ); pred_data$y1[1] = 0

#quadratic function
quadratic <- function(coeff) {  
  a <- coeff[1];b <- coeff[2];c <- coeff[3]; d <- b^2 - 4*a*c
  if(d >= 0) {
    root1 <- (-b + sqrt(d))/(2*a); root2 <- (-b - sqrt(d))/(2*a)
    return(c(root1,root2))}}

# bass model _________________
bass_lm <- lm( n ~ y1 + I(y1^2) ,pred_data ); s.lm <- summary(bass_lm)
bass_m <- quadratic(c(s.lm$coef[3],s.lm$coef[2],s.lm$coef[1]))[2]
bass_p <- s.lm$coef[1] / bass_m
bass_q <- -bass_m * s.lm$coef[3]
bass_error <- 100*(bass_m - pred_data$y[26])*(1/pred_data$y[26])
bass_mse <- mean(s.lm$residuals^2)
# logistic model _________________
logistic_lm <- lm( n ~ y1 + I(y1^2) + 0 , pred_data ); s.lm <- summary(logistic_lm)
logistic_m <- -logistic_lm$coefficients[1]/logistic_lm$coefficients[2]
logistic_q <- logistic_lm$coefficients[1]
logistic_error <- 100*(logistic_m - pred_data$y[26])/pred_data$y[26]
logistic_mse <- mean(s.lm$residuals^2)
# gumbel model _________________
gumbel_lm <- lm( n ~ y1 + I(y1*log(y1))+0 ,pred_data ); s.lm <- summary(gumbel_lm)
gumbel_m <- exp(-s.lm$coefficients[1] / s.lm$coefficients[2])
gumbel_q <- -s.lm$coefficients[2]
gumbel_error <- 100*(gumbel_m - pred_data$y[26])/pred_data$y[26]
gumbel_mse <- mean(s.lm$residuals^2)
# exponential model _________________
exp_lm <- lm(n ~ y1, data =pred_data );  s.lm <- summary(exp_lm)
exp_p = -coef(exp_lm)[2]
exp_m = coef(exp_lm)[1]/exp_p
exp_error = 100*(exp_m-pred_data$y[26])/pred_data$y[26]
exp_mse <- mean(s.lm$residuals^2)
#qqplot
k <- bass_p+bass_q; c <- bass_q/bass_p
pred_data = pred_data %>% mutate(ubass = y/(bass_m+1),
                                 qbass = (1/k)*log((1+c*ubass)/(1-ubass)),
                                 St_pbass = (bass_p + bass_q*y/bass_m)*(bass_m-y),
                                 Yt_pbass = cumsum(St_pbass) ,
                                 
                                 ulogistic = y / (logistic_m+1),
                                 qlogistic = log(ulogistic/(1-ulogistic)),
                                 St_plogistic = qlogistic*y/logistic_m*(logistic_m-y),
                                 Yt_plogistic = cumsum(St_plogistic),
                                 
                                 ugumbel = y / (gumbel_m+1),
                                 qgumbel = -log(-log(ugumbel)),
                                 St_pgumbel = qgumbel*y*(log(gumbel_m)-log(y)),
                                 Yt_pgumbel = cumsum(St_pgumbel),
                                 
                                 uexp = y/(exp_m+1),
                                 qexp = (1/exp_p)*(-log(1-uexp)),
                                 St_pexp = qexp*y/exp_m*(exp_m-y),
                                 Yt_pexp = cumsum(St_pexp))

#r^2
qqlm <- lm( t ~ qbass ,pred_data );  bass_r2 <- summary(qqlm)$r.squared
qqlm <- lm( t ~ qlogistic ,pred_data ); logistic_r2 <- summary(qqlm)$r.squared
qqlm <- lm( t ~ qgumbel ,pred_data );  gumbel_r2 <- summary(qqlm)$r.squared
qqlm <- lm( t ~ qexp ,pred_data );  exp_r2 <- summary(qqlm)$r.squared

# graph 
predqq1 <- ggplot(pred_data) +
  geom_line(aes(t, n), size = 1) + geom_line(aes(t, St_pbass), color = "red", size = 1) + 
  labs(x = "t", title = "구매건수 vs 예측된 구매건수") + theme_bw()
predqq2 <- ggplot(pred_data) +
  geom_line(aes(t, y), size = 1) + geom_line(aes(t, Yt_pbass), color = "red", size = 1) + 
  labs(x = "t", title = "누적구매건수 & 예측된 누적구매건수") + theme_bw()
gridExtra::grid.arrange(predqq1, predqq2, ncol = 2)

predqq1 <- ggplot(pred_data) +
  geom_line(aes(t, n), size = 1) + geom_line(aes(t, St_plogistic), color = "blue", size = 1) + 
  labs(x = "t", title = "St & predicted St") + theme_bw()
predqq2 <- ggplot(pred_data) +
  geom_line(aes(t, y), size = 1) + geom_line(aes(t, Yt_plogistic), color = "blue", size = 1) + 
  labs(x = "t", title = "Yt & predicted Yt") + theme_bw()
gridExtra::grid.arrange(predqq1, predqq2, nrow = 2)

predqq1 <- ggplot(pred_data) +
  geom_line(aes(t, n), size = 1) + geom_line(aes(t, St_pgumbel), color = "blue", size = 1) + 
  labs(x = "t", title = "St & predicted St") + theme_bw()
predqq2 <- ggplot(pred_data) +
  geom_line(aes(t, y), size = 1) + geom_line(aes(t, Yt_pgumbel), color = "blue", size = 1) + 
  labs(x = "t", title = "Yt & predicted Yt") + theme_bw()
gridExtra::grid.arrange(predqq1, predqq2, nrow = 2)

predqq1 <- ggplot(pred_data) +
  geom_line(aes(t, n), size = 1) + geom_line(aes(t, St_pexp), color = "blue", size = 1) + 
  labs(x = "t", title = "St & predicted St") + theme_bw()
predqq2 <- ggplot(pred_data) +
  geom_line(aes(t, y), size = 1) + geom_line(aes(t, Yt_pexp), color = "blue", size = 1) + 
  labs(x = "t", title = "Yt & predicted Yt") + theme_bw()
gridExtra::grid.arrange(predqq1, predqq2, nrow = 2)

## QQ Plot
g1 <- ggplot(pred_data, aes(x=qbass, y=t))+geom_point()+geom_smooth(method="lm",se=F)+ylab("X(r)")+
  ggtitle("Bass Q-Q Plot") + theme_bw()
g2 <- ggplot(pred_data, aes(x=qlogistic, y=t))+geom_point()+geom_smooth(method="lm",se=F)+ylab("X(r)")+
  ggtitle("Logistic Q-Q Plot")+ theme_bw()
g3 <- ggplot(pred_data, aes(x=qgumbel, y=t))+geom_point()+geom_smooth(method="lm",se=F)+ylab("X(r)")+
  ggtitle("Gumbel Q-Q Plot")+ theme_bw()

gridExtra::grid.arrange(g1,g2,g3,ncol = 3)


################################### FINAL PPT Table  ################################################

# 대분류별
ppt = plot_table %>% group_by(myCLAC_NM,CLAC1_NM,CLAC2_NM) %>% 
  summarize(FACTOR_raw = sum(FACTOR_raw, na.rm =T)) %>% ungroup() %>% 
  mutate(FACTOR =((FACTOR_raw - min(FACTOR_raw))/(max(FACTOR_raw)-min(FACTOR_raw)))*100 )

group = ppt %>% filter(myCLAC_NM == "1")
group = ppt %>% filter(myCLAC_NM == "2")
group = ppt %>% filter(myCLAC_NM == "3")
group = ppt %>% filter(myCLAC_NM == "4")
group = ppt %>% filter(myCLAC_NM == "5")
group = ppt %>% filter(myCLAC_NM == "6")
group = ppt %>% filter(myCLAC_NM == "7")
group = ppt %>% filter(myCLAC_NM == "8")
group = ppt %>% filter(myCLAC_NM == "9")
group = ppt %>% filter(myCLAC_NM == "10")

ggplot(group, aes(x =reorder(CLAC2_NM, -FACTOR), y = FACTOR, fill =CLAC1_NM)) + geom_bar(stat = "identity") + theme_light() + 
  ylab("선호지수")+xlab(NULL) +labs(fill="대분류") +scale_fill_brewer(palette="Set3") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))





##### 한번에 여러개씩 구매하는 제품은 무엇일까?  - package #####

input = final
package1 = input %>% group_by(CLNT_ID,PD_C) %>% count() %>% filter(n>1) 
package2 = package1 %>% group_by(PD_C,n) %>% count()
package3 = package2 %>% filter(nn >100) 
package = left_join(package3, master, by = "PD_C")
package = package[complete.cases(package),]

ggplot(package, aes(reorder(CLAC1_NM, -nn),nn)) + geom_bar(stat="identity") +theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# ---

# 각 상품코드별 구매 건수에 대한 히스토그램 
package4 = input %>% group_by(CLNT_ID,PD_C) %>% count() %>% group_by(PD_C,n) %>% count() %>% 
  package4 = package4[complete.cases(package4),]

package.PD_C = package[,1] %>% distinct(PD_C)
package.PD_C = as.numeric( package.PD_C[3,1])

find = package4[package4$PD_C == package.PD_C,] %>% filter(n >1)

ggplot(find, aes(reorder(n, -nn),nn)) + geom_bar(stat="identity") +theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# ---

# 2개씩 가장 많이 구매한 각 상품코드 (n ==2 )
package5 = package2 %>% filter(n == 2) %>% arrange(desc(nn)) %>% filter(nn > 500) %>% left_join( master, by = "PD_C")
ggplot(package5, aes(reorder(PD_C, -nn),nn)) + geom_bar(stat="identity") +theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(package5, aes(reorder(CLAC3_NM, -nn),nn)) + geom_bar(stat="identity") +theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

temp = final[complete.cases(final),] %>% group_by(CLNT_ID,PD_C) %>% count() %>% 
  group_by(PD_C,n) %>% count()

temp1 = temp %>% filter(PD_C == "753343") %>% filter(n <7)
temp2 = temp %>% filter(PD_C == "748308") %>% filter(n <7)
temp3 = temp %>% filter(PD_C == "692709") %>% filter(n <7)

ggplot(temp1, aes(as.factor(n), nn)) + geom_bar(stat = "identity")+theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlab("구입상품수") + ylab("빈도")
ggplot(temp2, aes(as.factor(n), nn))  + geom_bar(stat = "identity")+theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlab("구입상품수") + ylab("빈도")
ggplot(temp3, aes(as.factor(n), nn))  + geom_bar(stat = "identity")+theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + xlab("구입상품수") + ylab("빈도")


a1 = final[complete.cases(final),] %>% filter(PD_C == "753343") %>% 
  mutate(GENDER_AGE = paste(CLNT_GENDER,CLNT_AGE,sep = "" )) %>% group_by(CLNT_GENDER,GENDER_AGE) %>% count()
a2 = final[complete.cases(final),] %>% filter(PD_C == "748308") %>% 
  mutate(GENDER_AGE = paste(CLNT_GENDER,CLNT_AGE,sep = "" )) %>% group_by(CLNT_GENDER,GENDER_AGE) %>% count()
a3 = final[complete.cases(final),] %>% filter(PD_C == "692709") %>% 
  mutate(GENDER_AGE = paste(CLNT_GENDER,CLNT_AGE,sep = "" )) %>% group_by(CLNT_GENDER,GENDER_AGE) %>% count()

ggplot(a1, aes(x =as.factor(GENDER_AGE), y = n, fill =CLNT_GENDER))+geom_bar(stat = "identity")+theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  xlab("연령/성별그룹") + ylab("빈도") + scale_fill_brewer(palette="Set1")
ggplot(a2, aes(x =as.factor(GENDER_AGE), y = n, fill =CLNT_GENDER))+geom_bar(stat = "identity")+theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  xlab("연령/성별그룹") + ylab("빈도") + scale_fill_brewer(palette="Set1")
ggplot(a3, aes(x =as.factor(GENDER_AGE), y = n, fill =CLNT_GENDER))+geom_bar(stat = "identity")+theme_light() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  xlab("연령/성별그룹") + ylab("빈도") + scale_fill_brewer(palette="Set1")

